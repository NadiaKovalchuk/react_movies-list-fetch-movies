{"version":3,"sources":["components/MovieCard/MovieCard.tsx","api.ts","context/movieContext.tsx","components/MoviesList/MoviesList.tsx","components/FindMovie/FindMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","API_URL","MovieContext","createContext","inputValue","changeInputValue","isLoadingMovie","isError","searchMovie","reset","addMovie","movies","MovieProvider","children","useState","setMovie","setInputValue","setIsLoadingMovie","setIsError","setMovies","movieName","a","query","fetch","then","res","json","catch","Response","Error","responce","hasOwnProperty","currentMovie","Poster","imdbID","Title","Plot","imdbId","value","str","nextMovie","prevMovies","some","checkMovie","Provider","MoviesList","useContext","map","FindMovie","console","log","onSubmit","event","preventDefault","onFormClick","htmlFor","type","id","placeholder","classNames","input","onChange","target","disabled","onClick","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bfad39c3.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movieCard\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          data-cy=\"moviePoster\"\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\" data-cy=\"movieTitle\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\" data-cy=\"movieDescription\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl} data-cy=\"movieURL\">\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n);\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_KEY = '66e4f507';\n\nconst API_URL = `https://www.omdbapi.com/?apikey=${API_KEY}`;\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","/* eslint-disable no-delete-var */\n/* eslint-disable no-param-reassign */\n/* eslint-disable max-len */\n/* eslint-disable no-useless-return */\n/* eslint-disable no-prototype-builtins */\nimport React, { createContext, useState } from 'react';\nimport { Movie } from '../types/Movie';\nimport { getMovie } from '../api';\nimport { MovieData } from '../types/MovieData';\n\nconst defaultImg = 'https://via.placeholder.com/360x270.png?text=no%20preview';\n\ntype Props = {\n  children: React.ReactNode;\n};\n\ninterface MovieContextType {\n  movie: Movie | null;\n  inputValue: string;\n  changeInputValue: (str: string) => void;\n  isLoadingMovie: boolean;\n  isError: boolean;\n  searchMovie: (movieName: string) => void;\n  movies: Movie[] | [];\n  addMovie: (nextMovie: Movie) => void;\n  reset: () => void;\n}\n\nexport const MovieContext = createContext<MovieContextType>({\n  movie: null,\n  inputValue: '',\n  changeInputValue: () => {},\n  isLoadingMovie: false,\n  isError: false,\n  searchMovie: () => {},\n  reset: () => {},\n  addMovie: () => {},\n  movies: [],\n});\n\nexport const MovieProvider: React.FC<Props> = ({ children }) => {\n  const [movie, setMovie] = useState<Movie | null>(null);\n  const [inputValue, setInputValue] = useState('');\n  const [isLoadingMovie, setIsLoadingMovie] = useState(false);\n  const [isError, setIsError] = useState(false);\n  const [movies, setMovies] = useState<Movie[]>([]);\n  const changeInputValue = (str: string) => {\n    setIsError(false);\n    setInputValue(str);\n  };\n\n  const searchMovie = async (movieName: string) => {\n    setIsLoadingMovie(true);\n    try {\n      const responce = await getMovie(movieName);\n\n      if (responce.hasOwnProperty('Error')) {\n        setIsError(true);\n\n        return;\n      }\n\n      const currentMovie = responce as MovieData;\n\n      const imgUrl\n        = currentMovie.Poster !== 'N/A' ? currentMovie.Poster : defaultImg;\n      const imdbUrl = `https://www.imdb.com/title/${currentMovie.imdbID}`;\n\n      setMovie({\n        title: currentMovie.Title,\n        description: currentMovie.Plot,\n        imgUrl,\n        imdbUrl,\n        imdbId: currentMovie.imdbID,\n      });\n    } catch {\n      setIsError(true);\n    } finally {\n      setIsLoadingMovie(false);\n    }\n  };\n\n  const reset = () => {\n    setInputValue('');\n    setMovie(null);\n  };\n\n  const addMovie = (nextMovie: Movie) => {\n    setMovies((prevMovies) => {\n      const isMovieAlreadyAdded = prevMovies.some(\n        (checkMovie) => checkMovie.imdbId === nextMovie.imdbId,\n      );\n\n      if (isMovieAlreadyAdded) {\n        return prevMovies;\n      }\n\n      return [...prevMovies, nextMovie];\n    });\n\n    reset();\n  };\n\n  const value = {\n    movie,\n    inputValue,\n    changeInputValue,\n    isLoadingMovie,\n    isError,\n    searchMovie,\n    reset,\n    movies,\n    addMovie,\n  };\n\n  return (\n    <MovieContext.Provider value={value}>{children}</MovieContext.Provider>\n  );\n};\n","/* eslint-disable no-console */\nimport React, { useContext } from 'react';\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { MovieContext } from '../../context/movieContext';\n\nexport const MoviesList: React.FC = () => {\n  const { movies } = useContext(MovieContext);\n\n  return (\n    <div className=\"movies\">\n      {movies.map((movie) => (\n        <MovieCard key={movie.imdbId} movie={movie} />\n      ))}\n    </div>\n  );\n};\n","/* eslint-disable no-console */\nimport React, { useContext } from 'react';\nimport './FindMovie.scss';\nimport classNames from 'classnames';\nimport { MovieContext } from '../../context/movieContext';\nimport { MovieCard } from '../MovieCard';\n\nexport const FindMovie: React.FC = () => {\n  const {\n    inputValue,\n    changeInputValue,\n    isLoadingMovie,\n    isError,\n    searchMovie,\n    movie,\n    reset,\n    addMovie,\n  } = useContext(MovieContext);\n\n  console.log(isLoadingMovie, isError);\n\n  const onFormClick = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    searchMovie(inputValue);\n\n    reset();\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\" onSubmit={(event) => onFormClick(event)}>\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={classNames({ input: true, 'is-danger': isError })}\n              value={inputValue}\n              onChange={(event) => changeInputValue(event.target.value)}\n            />\n          </div>\n\n          {isError && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              className={classNames({\n                'button is-light': !isLoadingMovie,\n                'button is-light is-loading': isLoadingMovie,\n              })}\n              disabled={!inputValue}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          {movie && (\n            <div className=\"control\">\n              <button\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={() => addMovie(movie)}\n              >\n                Add to the list\n              </button>\n            </div>\n          )}\n        </div>\n      </form>\n\n      {movie && (\n        <div className=\"container\" data-cy=\"previewContainer\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard movie={movie} />\n        </div>\n      )}\n    </>\n  );\n};\n","/* eslint-disable no-console */\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { MovieProvider } from './context/movieContext';\n\nexport const App = () => {\n  return (\n    <MovieProvider>\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList />\n        </div>\n\n        <div className=\"sidebar\">\n          <FindMovie />\n        </div>\n      </div>\n    </MovieProvider>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}